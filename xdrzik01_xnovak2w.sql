-- Autor: Diana Maxima Držíková, Login: xdrzik01
-- Autor: Mária Nováková, Login: xnovak2w
-- Date: 02.05.2022
-- VUT FIT 21/22

drop table surovina_pivo;
drop table pivo_uzivatel;
drop table uzivatel_pivovar;
drop table distribucia;
drop table sladkovsky_diplom;
drop table zmluva;
drop table slad;
drop table chmel;
drop table kvasnice;
drop table surovina;
drop table pivo;
drop table uzivatel;
drop table pivovar;
drop table podnik;
DROP MATERIALIZED VIEW velki_pivkari;


create table surovina(
    surovina_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    dodavatel VARCHAR(100) NOT NULL
);

create table slad(
    slad_id INT PRIMARY KEY NOT NULL,
    nazov_sladu VARCHAR(100),
    farba VARCHAR(100) NOT NULL,
    povod VARCHAR(100) NOT NULL,
    extrakt NUMBER DEFAULT 0,
    CONSTRAINT slad_surovina_id_fk FOREIGN KEY (slad_id) REFERENCES surovina (surovina_id) ON DELETE CASCADE
);

create table chmel(
    chmel_id INT PRIMARY KEY NOT NULL,
    nazov_chmelu VARCHAR(100),
    aroma VARCHAR(100) NOT NULL,
    horkost VARCHAR(100) NOT NULL,
    alfa_kyseliny NUMBER,
    povod VARCHAR(100) NOT NULL,
    doba_zberu VARCHAR(100) NOT NULL,
    CONSTRAINT chmel_surovina_id_fk FOREIGN KEY (chmel_id) REFERENCES surovina (surovina_id) ON DELETE CASCADE

);

create table kvasnice(
    kvasnice_id INT PRIMARY KEY NOT NULL,
    typ VARCHAR(100),
    skupenstvo VARCHAR(100) NOT NULL,
    CONSTRAINT kvasnice_surovina_id_fk FOREIGN KEY (kvasnice_id) REFERENCES surovina (surovina_id) ON DELETE CASCADE
);

create table pivo(
    pivo_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    typ VARCHAR(100) NOT NULL,
    styl_kvasenia VARCHAR(100) NOT NULL,
    obsah_alkoholu NUMBER CHECK ( obsah_alkoholu > 0) NOT NULL ,
    EBC INT,
    cena NUMBER,
    hodnotenie NUMBER DEFAULT 0

);

create table pivovar(
    pivovar_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    ICO INT CHECK ( ICO <= 99999999 ),
    nazov_pivovaru VARCHAR(100) NOT NULL,
    adresa VARCHAR(100) NOT NULL
);

create table uzivatel(
    uzivatel_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    login VARCHAR(100) NOT NULL CHECK ( REGEXP_LIKE( login, '[a-zA-Z0-9]', 'i') ),
    heslo VARCHAR(100) NOT NULL,
    datum_narodenia DATE,
    mnozstvo_piva NUMBER DEFAULT 0,
    id_pivovar INT DEFAULT NULL,
	CONSTRAINT pivovar_uzivatel_id1_fk FOREIGN KEY (id_pivovar) REFERENCES pivovar (pivovar_id) ON DELETE SET NULL
);

create table podnik(
    podnik_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    ICO INT CHECK ( ICO <= 99999999 ),
    nazov VARCHAR(100) NOT NULL,
    adresa VARCHAR(100) NOT NULL,
    hodnotenie NUMBER DEFAULT 0
);

create table distribucia(
    distribucia_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    forma VARCHAR(100) NOT NULL,
    mnozstvo INT CHECK ( mnozstvo > 0 ) NOT NULL,
    id_podnik INT DEFAULT NULL,
    id_pivo INT DEFAULT NULL,
    CONSTRAINT podnik_pivovar_distribucia_podnik_fk FOREIGN KEY (id_podnik) REFERENCES podnik (podnik_id) ON DELETE CASCADE,
    CONSTRAINT podnik_pivovar_distribucia_pivo_fk FOREIGN KEY (id_pivo) REFERENCES pivo (pivo_id) ON DELETE CASCADE
);

create table zmluva(
    zmluva_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    poradove_cislo INT NOT NULL,
    zlava NUMBER,
    obdobie VARCHAR(100),
    id_podnik INT DEFAULT NULL,
    id_pivovar INT DEFAULT NULL,
    CONSTRAINT podnik_pivovar_zmluva_podnik_fk FOREIGN KEY (id_podnik) REFERENCES podnik (podnik_id) ON DELETE CASCADE,
    CONSTRAINT podnik_pivovar_zmluva_pivovar_fk FOREIGN KEY (id_pivovar) REFERENCES pivovar (pivovar_id) ON DELETE CASCADE

);

create table sladkovsky_diplom(
    sladkovsky_diplom_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    meno_notara VARCHAR(100),
    datum DATE,
    id_uzivatel INT NOT NULL,
    CONSTRAINT sladkovsky_diplom_id_fk FOREIGN KEY (id_uzivatel) REFERENCES uzivatel (uzivatel_id) ON DELETE CASCADE
);

create table surovina_pivo(
    id_surovina INT NOT NULL,
    id_pivo INT NOT NULL,
    mnozstvo INT CHECK( mnozstvo > 0 ) NOT NULL,
    CONSTRAINT surovina_pivo_pk PRIMARY KEY (id_surovina, id_pivo),
    CONSTRAINT surovina_pivo_surovina_fk FOREIGN KEY (id_surovina) REFERENCES surovina (surovina_id) ON DELETE CASCADE ,
    CONSTRAINT surovina_pivo_pivo_fk FOREIGN KEY (id_pivo) REFERENCES pivo (pivo_id) ON DELETE CASCADE
);

create table pivo_uzivatel(
    id_pivo INT NOT NULL,
    id_uzivatel INT NOT NULL,
    typ_piva VARCHAR(100) NOT NULL,
    login VARCHAR(100),
    pocet_kusov_na_sklade NUMBER,
    CONSTRAINT pivo_uzivatel_pk PRIMARY KEY (id_pivo, id_uzivatel),
    CONSTRAINT pivo_uzivatel_pivo_fk FOREIGN KEY (id_pivo) REFERENCES pivo (pivo_id) ON DELETE SET NULL ,
    CONSTRAINT pivo_uzivatel_uzivatel_fk FOREIGN KEY (id_uzivatel) REFERENCES uzivatel (uzivatel_id) ON DELETE SET NULL
);

create table uzivatel_pivovar(
    id_uzivatel INT NOT NULL,
    id_pivovar INT NOT NULL,
    CONSTRAINT uzivatel_pivovar_pk PRIMARY KEY (id_uzivatel, id_pivovar),
    CONSTRAINT uzivatel_pivovar_uzivatel_fk FOREIGN KEY (id_uzivatel) REFERENCES uzivatel (uzivatel_id) ON DELETE SET NULL,
    CONSTRAINT uzivatel_pivovar_pivovar_fk FOREIGN KEY (id_pivovar) REFERENCES pivovar (pivovar_id) ON DELETE SET NULL
);
----------------------triggery-----------------

-- Obmedzenie uživateľov na vek 18 rokov.
CREATE OR REPLACE TRIGGER kontrola_veku
    BEFORE INSERT ON uzivatel
    FOR EACH ROW
    DECLARE
    emp_age number;
BEGIN
    SELECT MONTHS_BETWEEN(TO_DATE(sysdate,'YYYY-MM-DD'), TO_DATE(:new.datum_narodenia,'YYYY-MM-DD'))/12
    INTO emp_age FROM DUAL;
    IF emp_age < 18 THEN
        RAISE_APPLICATION_ERROR(-20000,'Employee age must be greater than or equal to 18.');
    end if;
END;
/

alter session set nls_date_format = 'YYYY-MM-DD';

-- zmenenie názvu piva
CREATE OR REPLACE TRIGGER nazov_piva
	AFTER UPDATE OF typ ON pivo
	FOR EACH ROW
BEGIN
	UPDATE pivo_uzivatel SET typ_piva = :NEW.typ
	WHERE typ_piva = :OLD.typ;
END;
/
-- vymazávanie položiek zo skLadu
CREATE OR REPLACE TRIGGER na_sklade
    BEFORE INSERT ON distribucia
    FOR EACH ROW
    DECLARE
        kusy number;
BEGIN
    SELECT pocet_kusov_na_sklade INTO kusy FROM pivo_uzivatel WHERE pivo_uzivatel.id_pivo = :NEW.id_pivo;
    IF kusy >= :NEW.mnozstvo THEN
        UPDATE pivo_uzivatel
        SET pocet_kusov_na_sklade = pocet_kusov_na_sklade - :NEW.mnozstvo
        WHERE id_pivo = :NEW.id_pivo;
    ELSE
        RAISE_APPLICATION_ERROR(-20000,'Pozadovane mnozstvo presahuje.');
    END IF;
END;
/

---------------------surovina------------------
INSERT INTO surovina
VALUES (1,'Kvasnice pre každého');
INSERT INTO surovina
VALUES (2,'Chmeľ a Slad - Pat a Mat');
INSERT INTO surovina
VALUES (3,'Slad nad zlato');
INSERT INTO surovina
VALUES (4,'Slad - Vlad');
INSERT INTO surovina
VALUES (5,'Kvasíš, Kvasím, Kvasíme');
INSERT INTO surovina
VALUES (6,'Chmel Gibson');

---------------------slad------------------
INSERT INTO slad
VALUES (3,'Plzeňský', 'svetlá - 3.5', 'CZ', 81);
INSERT INTO slad
VALUES (4,'Najlepší', 'karamelový - 10', 'SK', 83);

---------------------chmel------------------
INSERT INTO chmel
VALUES (2,'Žatecký chmel', 'horké' , '1:1.5', 3.5, 'CZ','August');
INSERT INTO chmel
VALUES (6,'Žatecký chmel', 'horké' , '1:1.5', 3.5, 'CZ','Jún');

---------------------kvasnice------------------
INSERT INTO kvasnice
VALUES (1,'spodné', 'tekuté');
INSERT INTO kvasnice
VALUES (5,'vrchné', 'tekuté');

---------------------pivo------------------
INSERT INTO pivo (typ, styl_kvasenia, obsah_alkoholu, EBC, hodnotenie, cena)
VALUES ('Svijany 13 tmavé - Lager', 'spodné', 5.2, 40, 4.4, 2.0);
INSERT INTO pivo (typ, styl_kvasenia, obsah_alkoholu, EBC, hodnotenie, cena)
VALUES ('Pilsner Urquell 12 - Lager', 'spodné', 4.4, 10, 5.0, 2.2);
INSERT INTO pivo (typ, styl_kvasenia, obsah_alkoholu, EBC, hodnotenie, cena)
VALUES ('Svijany 13 - Lager', 'spodné', 5.6, 13, 5.0, 1.8);
INSERT INTO pivo (typ, styl_kvasenia, obsah_alkoholu, EBC, hodnotenie, cena)
VALUES ('Imriško 12 - ALE', 'vrchné', 4.5, 10, 4.9, 4.0);
INSERT INTO pivo (typ, styl_kvasenia, obsah_alkoholu, EBC, hodnotenie, cena)
VALUES ('Tmavá Suzan 12 - Lager', 'spodné', 5.5, 45, 4.9, 3.5);

---------------------pivovar------------------
INSERT INTO pivovar (ICO, nazov_pivovaru, adresa)
VALUES (05159822, 'Plzeňský Prazdroj', 'U Prazdroje 64/7, 301 00 Plzeň 3, CZ');
INSERT INTO pivovar (ICO, nazov_pivovaru, adresa)
VALUES (05159823, 'Svijany Brewery', 'Svijany 25, 463 46 Svijany, CZ');
INSERT INTO pivovar (ICO, nazov_pivovaru, adresa)
VALUES (05159824, 'Imrove pivko', 'Okružná 20, 010 01, Žilina, SK');
INSERT INTO pivovar (ICO, nazov_pivovaru, adresa)
VALUES (05159825, 'Krigeľ u Suzan', 'Krespole 1, 013 41, Dolný Hričov, SK');

---------------------uzivatel------------------ (kontrola triggeru kontrola_veku)
INSERT INTO uzivatel (login, heslo, datum_narodenia, mnozstvo_piva)
VALUES ('Super Pivkár', 'milujempivo123', DATE'2000-08-03', 10.5);
INSERT INTO uzivatel  (login, heslo, datum_narodenia, mnozstvo_piva, id_pivovar)
VALUES ('Imro12', 'Tom00_', DATE'1980-09-10', 27.6, 3);
INSERT INTO uzivatel (login, heslo, datum_narodenia, mnozstvo_piva)
VALUES ('Ereh Tatakae', 'aeXU0B_B12kl', DATE'2001-12-12', 60);
INSERT INTO uzivatel  (login, heslo, datum_narodenia, mnozstvo_piva, id_pivovar)
VALUES ('Pavlína Lodnovská', 'katka2009', DATE'1991-06-23', 4.4, 2);
INSERT INTO uzivatel  (login, heslo, datum_narodenia, mnozstvo_piva, id_pivovar)
VALUES ('Leuška14', 'NemámRádaVrútky', DATE'2000-12-17', 1000.1, 1);
INSERT INTO uzivatel (login, heslo, datum_narodenia, mnozstvo_piva, id_pivovar)
VALUES ('VictorNikiforov', 'yuuri_makkachin', DATE'1989-12-25', 30.2, 4);

---------------------podnik------------------
INSERT INTO podnik (ICO, nazov, adresa, hodnotenie)
VALUES (05159826, 'DEpresso', 'Národná 15, 010 01 Žilina, SK', 5);
INSERT INTO podnik (ICO, nazov, adresa, hodnotenie)
VALUES (05159827, 'Café Republika', 'Jozefa Vuruma č. 6, 010 01 Žilina, SK', 4.7);
INSERT INTO podnik (ICO, nazov, adresa, hodnotenie)
VALUES (05159828, 'Tekutá večera', 'Jasenského 10, 023 34, SK', 3.9);
INSERT INTO podnik (ICO, nazov, adresa, hodnotenie)
VALUES (05159829, 'Lakocinky', 'Purkyňova 1, 612 00 Brno-Královo Pole, CZ', 2.4);

---------------------zmluva------------------
INSERT INTO zmluva (poradove_cislo, zlava, obdobie, id_podnik, id_pivovar)
VALUES (1, 17, '2022', 1, 2);
INSERT INTO zmluva (poradove_cislo, zlava, obdobie, id_podnik, id_pivovar)
VALUES (2, 20, '2023', 1, 2);
INSERT INTO zmluva (poradove_cislo, zlava, obdobie, id_podnik, id_pivovar)
VALUES (1, 14, '2021' , 2, 1);
INSERT INTO zmluva (poradove_cislo, zlava, obdobie, id_podnik, id_pivovar)
VALUES (1, 20, '2020' , 4, 3);
INSERT INTO zmluva (poradove_cislo, zlava, obdobie, id_podnik, id_pivovar)
VALUES (1, 15, '2020' , 4, 4);

---------------------sladkovsky_diplom------------------
INSERT INTO sladkovsky_diplom (meno_notara, datum, id_uzivatel)
VALUES ('Mgr. Magdalána Zázvorová', DATE'2022-04-01', 2);
INSERT INTO sladkovsky_diplom (meno_notara, datum, id_uzivatel)
VALUES ('Mgr. Ľubomíra Chlebíková',  DATE'2020-06-02', 4);
INSERT INTO sladkovsky_diplom (meno_notara, datum, id_uzivatel)
VALUES ('Mgr. Ľubomíra Chlebíková',  DATE'2020-08-11', 5);
INSERT INTO sladkovsky_diplom (meno_notara, datum, id_uzivatel)
VALUES ('Mgr. Tom Kocúr',  DATE'2017-03-12', 6);

---------------------surovina_pivo------------------
INSERT INTO surovina_pivo (id_surovina, id_pivo, mnozstvo)
VALUES (3 , 1 , 45);
INSERT INTO surovina_pivo (id_surovina, id_pivo, mnozstvo)
VALUES (6 , 1, 30);
INSERT INTO surovina_pivo (id_surovina, id_pivo, mnozstvo)
VALUES (1 , 1 , 100);

INSERT INTO surovina_pivo (id_surovina, id_pivo, mnozstvo)
VALUES (3 , 2 , 200);
INSERT INTO surovina_pivo (id_surovina, id_pivo, mnozstvo)
VALUES (6 , 2, 30);
INSERT INTO surovina_pivo (id_surovina, id_pivo, mnozstvo)
VALUES (1 , 2 , 70);

INSERT INTO surovina_pivo (id_surovina, id_pivo, mnozstvo)
VALUES (3 , 3 , 150);
INSERT INTO surovina_pivo (id_surovina, id_pivo, mnozstvo)
VALUES (2 , 3, 300);
INSERT INTO surovina_pivo (id_surovina, id_pivo, mnozstvo)
VALUES (1 , 3 , 445);

INSERT INTO surovina_pivo (id_surovina, id_pivo, mnozstvo)
VALUES (5 , 4 , 100);
INSERT INTO surovina_pivo (id_surovina, id_pivo, mnozstvo)
VALUES (2 , 4 , 50);
INSERT INTO surovina_pivo (id_surovina, id_pivo, mnozstvo)
VALUES (4 , 4 , 76);

INSERT INTO surovina_pivo (id_surovina, id_pivo, mnozstvo)
VALUES (3 , 5 , 123);
INSERT INTO surovina_pivo (id_surovina, id_pivo, mnozstvo)
VALUES (6 , 5, 256);
INSERT INTO surovina_pivo (id_surovina, id_pivo, mnozstvo)
VALUES (1 , 5 , 33);

---------------------pivo_uzivatel------------------
INSERT INTO pivo_uzivatel (id_pivo, id_uzivatel, typ_piva, pocet_kusov_na_sklade)
VALUES (1, 4, 'Svijany 13 tmavé - Lager', 1000);
INSERT INTO pivo_uzivatel (id_pivo, id_uzivatel, typ_piva, pocet_kusov_na_sklade)
VALUES (2, 5, 'Pilsner Urquell 12 - Lager', 500);
INSERT INTO pivo_uzivatel (id_pivo, id_uzivatel, typ_piva, pocet_kusov_na_sklade)
VALUES (3, 4, 'Svijany 13 - Lager', 2000);
INSERT INTO pivo_uzivatel (id_pivo, id_uzivatel, typ_piva, pocet_kusov_na_sklade)
VALUES (4, 2, 'Imriško 12 - ALE', 1000);
INSERT INTO pivo_uzivatel (id_pivo, id_uzivatel, typ_piva, pocet_kusov_na_sklade)
VALUES (5, 6, 'Tmavá Suzan 12 - Lager', 30000);

---------------------distribucia------------------ (kontrola triggeru na_sklade)
INSERT INTO distribucia (forma, mnozstvo ,id_podnik, id_pivo)
VALUES ('fľaškové', 1000, 1, 1);
INSERT INTO distribucia (forma, mnozstvo ,id_podnik, id_pivo)
VALUES ('súdek', 100, 1, 2);
INSERT INTO distribucia (forma, mnozstvo ,id_podnik, id_pivo)
VALUES ('súdek', 15, 2 , 3);
INSERT INTO distribucia (forma, mnozstvo ,id_podnik, id_pivo)
VALUES ('fľaškové', 15, 2 , 3);
INSERT INTO distribucia (forma, mnozstvo ,id_podnik, id_pivo)
VALUES ('súdek', 40, 3 , 4);
INSERT INTO distribucia (forma, mnozstvo ,id_podnik, id_pivo)
VALUES ('fľaškové', 500, 4 , 5);

---------------------uzivatel_pivovar------------------
INSERT INTO uzivatel_pivovar (id_uzivatel, id_pivovar)
VALUES (1, 1);
INSERT INTO uzivatel_pivovar (id_uzivatel, id_pivovar)
VALUES (1,2);
INSERT INTO uzivatel_pivovar (id_uzivatel, id_pivovar)
VALUES (6, 3);
INSERT INTO uzivatel_pivovar (id_uzivatel, id_pivovar)
VALUES (6,1);
INSERT INTO uzivatel_pivovar (id_uzivatel, id_pivovar)
VALUES (6,2);
INSERT INTO uzivatel_pivovar (id_uzivatel, id_pivovar)
VALUES (3,1);
INSERT INTO uzivatel_pivovar (id_uzivatel, id_pivovar)
VALUES (3,2);
INSERT INTO uzivatel_pivovar (id_uzivatel, id_pivovar)
VALUES (3,4);
INSERT INTO uzivatel_pivovar (id_uzivatel, id_pivovar)
VALUES (5,4);

---------------------selecty-----------------------

-- Ktorí uživatelia sú pivovarníci a ako sa volá pivovar, v ktorom pracujú? (login, nazov_pivovaru)
SELECT login, nazov_pivovaru
FROM uzivatel JOIN PIVOVAR ON uzivatel.id_pivovar = pivovar.pivovar_id
ORDER BY login;

-- Akí uživatelia mali vystavený sládkovský diplom v roku 2020? (login, datum, meno_notara)
SELECT login, datum, meno_notara
FROM sladkovsky_diplom, uzivatel
WHERE sladkovsky_diplom.id_uzivatel = uzivatel.uzivatel_id AND sladkovsky_diplom.datum BETWEEN TO_DATE('2020-01-01', 'YYYY-MM-DD') AND TO_DATE('2020-12-31','YYYY-MM-DD');

-- Kto varí pivo v českom pivovare? (login, nazov_pivovaru, adresa)
SELECT login, nazov_pivovaru, adresa
FROM pivovar JOIN uzivatel ON pivovar.pivovar_id = uzivatel.id_pivovar
WHERE adresa LIKE '%CZ%';

-- Odkiaľ majú jednotlivé pivá dodávaný slad? (typ, dodavatel)
SELECT DISTINCT typ, dodavatel
FROM surovina_pivo NATURAL JOIN pivo NATURAL JOIN surovina NATURAL JOIN slad
WHERE surovina_pivo.id_pivo = pivo.pivo_id AND surovina_pivo.id_surovina = surovina.surovina_id AND surovina.surovina_id = slad.slad_id;

-- Koľko pív je spodne kvasených?  (styl_kvasenia, pocet_piv)
SELECT styl_kvasenia, COUNT(*) pocet_piv
FROM pivo
WHERE styl_kvasenia = 'spodné' GROUP BY (styl_kvasenia);

-- Koľko pivovarov odoberá uživateľ s loginom 'VictorNikiforov'? (login, pocet_odoberanych_pivovarov)
SELECT login, COUNT(*) pocet_odoberanych_pivovarov
FROM uzivatel_pivovar JOIN uzivatel ON uzivatel_pivovar.id_uzivatel = uzivatel.uzivatel_id
WHERE login = 'VictorNikiforov' GROUP BY (login);

-- Aké pivá sú distribuované len v súdkovej podobe? (typ, mnozstvo)
SELECT typ, mnozstvo
FROM distribucia D, pivo P
WHERE D.id_pivo = P.pivo_id AND D.forma = 'súdek'
AND NOT EXISTS (SELECT *
FROM distribucia D
WHERE P.pivo_id = D.id_pivo AND D.forma <> 'súdek');

-- Ktoré zmluvy boli vystavené v roku 2020 na Slovensku? (zmluva_id, zlava, id_podnik, id_pivovar)
SELECT zmluva_id, zlava, id_podnik, id_pivovar
FROM zmluva
WHERE id_podnik IN
(SELECT podnik_id FROM podnik
WHERE id_pivovar IN
(SELECT pivovar_id FROM pivovar
WHERE pivovar.adresa LIKE '%SK%' AND zmluva.obdobie = '2020'));

-----------------procedúry-------------------

-- Koľko je v databáze sládkov a nesládkov?
CREATE OR REPLACE PROCEDURE sladkoviaVSnesladkovia
AS
    nesladkovia number;
    sladkovia number;
    uzivatelia number;
    percento_sladkov number;
    percento_nesladkov number;
BEGIN
    SELECT COUNT(*) INTO nesladkovia FROM uzivatel WHERE id_pivovar IS NULL;
    SELECT COUNT(*) INTO sladkovia FROM uzivatel WHERE id_pivovar IS NOT NULL;
    SELECT COUNT(*) INTO uzivatelia FROM uzivatel;

    percento_sladkov := round(sladkovia / uzivatelia,2);
    percento_nesladkov := round(nesladkovia / uzivatelia,2);

    DBMS_OUTPUT.PUT_LINE('Percentuálne zastúpenie sládkov v systéme je: ' || percento_sladkov*100 || '% a nesládkov: ' || 100*percento_nesladkov || '%.');

    EXCEPTION WHEN ZERO_DIVIDE THEN
	BEGIN
		IF uzivatelia = 0 THEN
			DBMS_OUTPUT.put_line('V databáze nie sú žiadni uživatelia');
		END IF;
	END;
END;
COMMIT;
-- spustenie procedúry
BEGIN sladkoviaVSnesladkovia; END;

-- Koľko surovín predal konkrétny dodávateľ?
CREATE OR REPLACE PROCEDURE pocet_predaja
    (dodav IN VARCHAR)
AS
    id_surovina surovina_pivo.id_surovina%TYPE;
    dodavatel_id surovina_pivo.id_surovina%TYPE;
    pouzity_pocet NUMBER;
    CURSOR cursor IS SELECT id_surovina FROM surovina_pivo;
BEGIN
    pouzity_pocet := 0;
    SELECT surovina_id INTO dodavatel_id FROM surovina WHERE dodav = dodavatel; --výber id podľa zadaného dodávateľa
    OPEN cursor;
    LOOP
        FETCH cursor INTO id_surovina;
        EXIT WHEN cursor%NOTFOUND;
        IF id_surovina = dodavatel_id THEN
            pouzity_pocet := pouzity_pocet + 1;
        END IF;
    END LOOP;
    CLOSE cursor;
    DBMS_OUTPUT.put_line('Dodávateľ ' || dodav || ' predal ' || pouzity_pocet || 'krát na výrobu pív.');
END;
COMMIT;
-- spustenie procedúry
BEGIN pocet_predaja('Kvasnice pre každého'); END;

-----------------explain plan-------------------

-- Koľko odoberateľov majú jednotlivé pivovary?
EXPLAIN PLAN FOR
SELECT nazov_pivovaru, COUNT(*) pocet_odoberatelov
FROM uzivatel_pivovar NATURAL JOIN pivovar
WHERE uzivatel_pivovar.id_pivovar = pivovar.pivovar_id
GROUP BY (nazov_pivovaru);
SELECT PLAN_TABLE_OUTPUT FROM TABLE(DBMS_XPLAN.DISPLAY());

CREATE INDEX pivovary_index ON pivovar (nazov_pivovaru);

EXPLAIN PLAN FOR
SELECT nazov_pivovaru, COUNT(*) pocet_odoberatelov
FROM uzivatel_pivovar NATURAL JOIN pivovar
WHERE uzivatel_pivovar.id_pivovar = pivovar.pivovar_id
GROUP BY (nazov_pivovaru);
SELECT PLAN_TABLE_OUTPUT FROM TABLE(DBMS_XPLAN.DISPLAY());

DROP INDEX pivovary_index;

----------------------povolenia----------------------
GRANT ALL ON surovina_pivo TO xnovak2w;
GRANT ALL ON pivo_uzivatel TO xnovak2w;
GRANT ALL ON uzivatel_pivovar TO xnovak2w;
GRANT ALL ON distribucia TO xnovak2w;
GRANT ALL ON sladkovsky_diplom TO xnovak2w;
GRANT ALL ON zmluva TO xnovak2w;
GRANT ALL ON slad TO xnovak2w;
GRANT ALL ON chmel TO xnovak2w;
GRANT ALL ON kvasnice TO xnovak2w;
GRANT ALL ON surovina TO xnovak2w;
GRANT ALL ON pivo TO xnovak2w;
GRANT ALL ON uzivatel TO xnovak2w;
GRANT ALL ON pivovar TO xnovak2w;
GRANT ALL ON podnik TO xnovak2w;

GRANT EXECUTE ON pocet_predaja TO xnovak2w;
GRANT EXECUTE ON pivovarniciVSnepivovarnici TO xnovak2w;

-------------- MATERIALIZED VIEW + UPDATE dat --------- nasledujúcu časť kódu spúšta xnovak2w
CREATE MATERIALIZED VIEW velki_pivkari
REFRESH ON COMMIT AS
SELECT * FROM uzivatel WHERE mnozstvo_piva > 20;

SELECT * FROM velki_pivkari;
UPDATE uzivatel SET mnozstvo_piva = mnozstvo_piva+100 WHERE login = 'Leuška14';
--dáta ešte nebudú aktualizované v materialized view
SELECT * FROM velki_pivkari;
select * from uzivatel;
--aktualitácia dát
COMMIT;
--už aktualizované dáta
SELECT * FROM velki_pivkari;

------------------ triggers prevedenie -------------------

--vyhlási error, pre skúšku odkomentujte / trigger : KONTROLA_VEKU
--INSERT INTO uzivatel (login, heslo, datum_narodenia, mnozstvo_piva)
--VALUES ('Nezletily uzivatel', 'nemam18', DATE'2015-01-01', 30.2);

--trigger : NAZOV_PIVA
SELECT * FROM pivo_uzivatel;

UPDATE pivo
SET typ='Pilsner Urquell 12, Special - Lager'
WHERE typ='Pilsner Urquell 12 - Lager';

SELECT * FROM pivo_uzivatel;

--vyhlási error, pre skúšku odkomentujte / trigger : NA_SKLADE
--INSERT INTO distribucia (forma, mnozstvo ,id_podnik, id_pivo)
--VALUES ('fľaškové', 10000000, 1, 1);

